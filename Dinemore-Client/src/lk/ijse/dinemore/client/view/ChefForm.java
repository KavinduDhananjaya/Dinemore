/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.dinemore.client.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import lk.ijse.dinemore.client.controller.ChefController;
import lk.ijse.dinemore.client.controller.OrderController;
import lk.ijse.dinemore.common.dto.OrderDTO;
import lk.ijse.dinemore.common.observer.Observer;
import lk.ijse.dinemore.client.view.LoginForm;

/**
 *
 * @author User
 */
public class ChefForm extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form ChefForm
     */
    public ChefForm() {
        initComponents();
    }

    public ChefForm(String id) throws RemoteException, Exception {
        initComponents();
        loadAllOrders();
        UnicastRemoteObject.exportObject(this, 0);
        OrderController.getSubeject().registerObserver(this);
        dtm = (DefaultTableModel) tbl2.getModel();
        showTime();
        txtDate.setText(java.time.LocalDate.now() + "");
        lblID.setText(id);

    }

    private DefaultTableModel dtm;
    private String reservedCustomerID = "";

    private String orderId;
    private String name;
    private String tell;
    private String menu;
    private String quantity;
    private String time;

    private String finishtime;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl3 = new javax.swing.JTable();
        btnTakeOrder = new javax.swing.JButton();
        txtChefId = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl2 = new javax.swing.JTable();
        btnFinish = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTime = new javax.swing.JLabel();
        txtDate = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(724, 460));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.white));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Dinemore | Chef");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(307, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 724, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Pending Orders");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 110, 20));

        tbl3.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tbl3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Menu ID", "Quantity", "Time"
            }
        ));
        jScrollPane1.setViewportView(tbl3);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 560, 110));

        btnTakeOrder.setText("Take Order");
        btnTakeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeOrderActionPerformed(evt);
            }
        });
        jPanel1.add(btnTakeOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 160, 90, 30));

        txtChefId.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtChefId.setText("Chef ID :");
        jPanel1.add(txtChefId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 60, 20));

        tbl2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Menu ID", "Quantity", "Time", "Name", "Tell"
            }
        ));
        tbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 560, 110));

        btnFinish.setText("Finish Order");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });
        jPanel1.add(btnFinish, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 320, -1, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Taken Orders");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 90, 20));

        txtTime.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 80, 90, 20));

        txtDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 50, 80, 20));

        lblID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 70, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        try {
            OrderDTO orderDTO = new OrderDTO(orderId, name, tell, menu, quantity, time, "Finished");
            boolean updateOrder = OrderController.updateOrder(orderDTO);
            if (updateOrder) {
                JOptionPane.showMessageDialog(this, "Order has been Finished");
                loadAllOrders();
//                int selectedRow = tbl2.getSelectedRow(); 
//                dtm.removeRow(selectedRow);

            } else {
                JOptionPane.showMessageDialog(this, "Failed to Finish Order");
            }
            OrderController.releaseCustomer(reservedCustomerID);
            reservedCustomerID = "";
        } catch (Exception ex) {
            Logger.getLogger(RecieptionForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFinishActionPerformed

    private void btnTakeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeOrderActionPerformed

        try {
            OrderDTO orderDTO = new OrderDTO(orderId, name, tell, menu, quantity, time, "Taken");
            boolean updateOrder = OrderController.updateOrder(orderDTO);
            if (updateOrder) {
                JOptionPane.showMessageDialog(this, "Order has been Taken");
                loadAllOrders();
                loadAllTakenOrders();

            } else {
                JOptionPane.showMessageDialog(this, "Failed to Taken Order");
            }
            OrderController.releaseCustomer(reservedCustomerID);
            reservedCustomerID = "";
        } catch (Exception ex) {
            Logger.getLogger(RecieptionForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTakeOrderActionPerformed

    private void tbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl2MouseClicked

        try {
            int select = tbl2.getSelectedRow();
            orderId = dtm.getValueAt(select, 0).toString();
            time = dtm.getValueAt(select, 3).toString();
            name = dtm.getValueAt(select, 4).toString();
            menu = dtm.getValueAt(select, 1).toString();
            quantity = dtm.getValueAt(select, 2).toString();
            tell = dtm.getValueAt(select, 5).toString();

        } catch (Exception ex) {
            Logger.getLogger(ChefForm.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_tbl2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChefForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChefForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChefForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChefForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChefForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnTakeOrder;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblID;
    private javax.swing.JTable tbl2;
    private javax.swing.JTable tbl3;
    private javax.swing.JLabel txtChefId;
    private javax.swing.JLabel txtDate;
    private javax.swing.JLabel txtTime;
    // End of variables declaration//GEN-END:variables

    private void loadAllOrders() {
        DefaultTableModel dtm = (DefaultTableModel) tbl2.getModel();
        dtm.setRowCount(0);
        try {
            List<OrderDTO> orders = OrderController.getAllOrders();
            if (orders == null) {
                return;
            }

            for (OrderDTO order : orders) {
                Object[] rowData = {
                    order.getOrderId(),
                    order.getMenuId(),
                    order.getQty(),
                    order.getTime(),
                    order.getCustomerName(),
                    order.getTel(),};
                dtm.addRow(rowData);
            }

        } catch (Exception ex) {
            Logger.getLogger(RecieptionForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void updateObservers() throws Exception {
        loadAllOrders();

    }

    private void loadAllTakenOrders() {

        DefaultTableModel dtm2 = (DefaultTableModel) tbl3.getModel();

        Object[] rowData = {
            orderId,
            menu,
            quantity,
            finishtime};
        dtm2.addRow(rowData);

    }

    public void showTime() {

        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                Date date = new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                txtTime.setText(s.format(date));
                finishtime = s.format(date);
            }
        }).start();
    }

}
